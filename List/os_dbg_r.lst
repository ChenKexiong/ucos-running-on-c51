C51 COMPILER V9.51   OS_DBG_R                                                              02/25/2015 14:57:57 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE OS_DBG_R
OBJECT MODULE PLACED IN .\Output\os_dbg_r.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE Source\os_dbg_r.c BROWSE INCDIR(.\Source) DEBUG OBJECTEXTEND PRINT(.\Lis
                    -t\os_dbg_r.lst) TABS(2) OBJECT(.\Output\os_dbg_r.obj)

line level    source

   1          /*
   2          *********************************************************************************************************
   3          *                                                uC/OS-II
   4          *                                          The Real-Time Kernel
   5          *                                           DEBUGGER CONSTANTS
   6          *
   7          *                              (c) Copyright 1992-2009, Micrium, Weston, FL
   8          *                                           All Rights Reserved
   9          *
  10          * File    : OS_DBG.C
  11          * By      : Jean J. Labrosse
  12          * Version : V2.91
  13          *
  14          * LICENSING TERMS:
  15          * ---------------
  16          *   uC/OS-II is provided in source form for FREE evaluation, for educational use or for peaceful research.
             -  
  17          * If you plan on using  uC/OS-II  in a commercial product you need to contact Micriµm to properly license 
  18          * its use in your product. We provide ALL the source code for your convenience and to help you experience 
  19          * uC/OS-II.   The fact that the  source is provided does  NOT  mean that you can use it without  paying a 
  20          * licensing fee.
  21          *********************************************************************************************************
  22          */
  23          
  24          #include <ucos_ii.h>
*** WARNING C318 IN LINE 44 OF .\Source\ucos_ii.h: can't open file 'app_cfg.h'
  25          
  26          /*
  27          *********************************************************************************************************
  28          *                                             DEBUG DATA
  29          *********************************************************************************************************
  30          */
  31          
  32          INT16U  const  OSDebugEn           = OS_DEBUG_EN;               /* Debug constants are defined below   */
  33          
  34          #if OS_DEBUG_EN > 0u
  35          
  36          INT32U  const  OSEndiannessTest    = 0x12345678uL;              /* Variable to test CPU endianness     */
  37          
  38          INT16U  const  OSEventEn           = OS_EVENT_EN;
  39          INT16U  const  OSEventMax          = OS_MAX_EVENTS;             /* Number of event control blocks      */
  40          INT16U  const  OSEventNameEn       = OS_EVENT_NAME_EN;
  41          #if (OS_EVENT_EN) && (OS_MAX_EVENTS > 0u)
  42          INT16U  const  OSEventSize         = sizeof(OS_EVENT);          /* Size in Bytes of OS_EVENT           */
  43          INT16U  const  OSEventTblSize      = sizeof(OSEventTbl);        /* Size of OSEventTbl[] in bytes       */
  44          #else
              INT16U  const  OSEventSize         = 0u;
              INT16U  const  OSEventTblSize      = 0u;
              #endif
  48          INT16U  const  OSEventMultiEn      = OS_EVENT_MULTI_EN;
  49          
  50          
  51          INT16U  const  OSFlagEn            = OS_FLAG_EN;
  52          #if (OS_FLAG_EN > 0u) && (OS_MAX_FLAGS > 0u)
C51 COMPILER V9.51   OS_DBG_R                                                              02/25/2015 14:57:57 PAGE 2   

  53          INT16U  const  OSFlagGrpSize       = sizeof(OS_FLAG_GRP);       /* Size in Bytes of OS_FLAG_GRP        */
  54          INT16U  const  OSFlagNodeSize      = sizeof(OS_FLAG_NODE);      /* Size in Bytes of OS_FLAG_NODE       */
  55          INT16U  const  OSFlagWidth         = sizeof(OS_FLAGS);          /* Width (in bytes) of OS_FLAGS        */
  56          #else
              INT16U  const  OSFlagGrpSize       = 0u;
              INT16U  const  OSFlagNodeSize      = 0u;
              INT16U  const  OSFlagWidth         = 0u;
              #endif
  61          INT16U  const  OSFlagMax           = OS_MAX_FLAGS;
  62          INT16U  const  OSFlagNameEn        = OS_FLAG_NAME_EN;
  63          
  64          INT16U  const  OSLowestPrio        = OS_LOWEST_PRIO;
  65          
  66          INT16U  const  OSMboxEn            = OS_MBOX_EN;
  67          
  68          INT16U  const  OSMemEn             = OS_MEM_EN;
  69          INT16U  const  OSMemMax            = OS_MAX_MEM_PART;           /* Number of memory partitions         */
  70          INT16U  const  OSMemNameEn         = OS_MEM_NAME_EN;
  71          #if (OS_MEM_EN > 0u) && (OS_MAX_MEM_PART > 0u)
  72          INT16U  const  OSMemSize           = sizeof(OS_MEM);            /* Mem. Partition header sine (bytes)  */
  73          INT16U  const  OSMemTblSize        = sizeof(OSMemTbl);
  74          #else
              INT16U  const  OSMemSize           = 0u;
              INT16U  const  OSMemTblSize        = 0u;
              #endif
  78          INT16U  const  OSMutexEn           = OS_MUTEX_EN;
  79          
  80          INT16U  const  OSPtrSize           = sizeof(void *);            /* Size in Bytes of a pointer          */
  81          
  82          INT16U  const  OSQEn               = OS_Q_EN;
  83          INT16U  const  OSQMax              = OS_MAX_QS;                 /* Number of queues                    */
  84          #if (OS_Q_EN > 0u) && (OS_MAX_QS > 0u)
  85          INT16U  const  OSQSize             = sizeof(OS_Q);              /* Size in bytes of OS_Q structure     */
  86          #else
              INT16U  const  OSQSize             = 0u;
              #endif
  89          
  90          INT16U  const  OSRdyTblSize        = OS_RDY_TBL_SIZE;           /* Number of bytes in the ready table  */
  91          
  92          INT16U  const  OSSemEn             = OS_SEM_EN;
  93          
  94          INT16U  const  OSStkWidth          = sizeof(OS_STK);            /* Size in Bytes of a stack entry      */
  95          
  96          INT16U  const  OSTaskCreateEn      = OS_TASK_CREATE_EN;
  97          INT16U  const  OSTaskCreateExtEn   = OS_TASK_CREATE_EXT_EN;
  98          INT16U  const  OSTaskDelEn         = OS_TASK_DEL_EN;
  99          INT16U  const  OSTaskIdleStkSize   = OS_TASK_IDLE_STK_SIZE;
 100          INT16U  const  OSTaskProfileEn     = OS_TASK_PROFILE_EN;
 101          INT16U  const  OSTaskMax           = OS_MAX_TASKS + OS_N_SYS_TASKS; /* Total max. number of tasks      */
 102          INT16U  const  OSTaskNameEn        = OS_TASK_NAME_EN;  
 103          INT16U  const  OSTaskStatEn        = OS_TASK_STAT_EN;
 104          INT16U  const  OSTaskStatStkSize   = OS_TASK_STAT_STK_SIZE;
 105          INT16U  const  OSTaskStatStkChkEn  = OS_TASK_STAT_STK_CHK_EN;
 106          INT16U  const  OSTaskSwHookEn      = OS_TASK_SW_HOOK_EN;
 107          INT16U  const  OSTaskRegTblSize    = OS_TASK_REG_TBL_SIZE;
 108          
 109          INT16U  const  OSTCBPrioTblMax     = OS_LOWEST_PRIO + 1u;       /* Number of entries in OSTCBPrioTbl[] */
 110          INT16U  const  OSTCBSize           = sizeof(OS_TCB);            /* Size in Bytes of OS_TCB             */
 111          INT16U  const  OSTicksPerSec       = OS_TICKS_PER_SEC;
 112          INT16U  const  OSTimeTickHookEn    = OS_TIME_TICK_HOOK_EN;
 113          INT16U  const  OSVersionNbr        = OS_VERSION;
 114          
C51 COMPILER V9.51   OS_DBG_R                                                              02/25/2015 14:57:57 PAGE 3   

 115          INT16U  const  OSTmrEn             = OS_TMR_EN;
 116          INT16U  const  OSTmrCfgMax         = OS_TMR_CFG_MAX;
 117          INT16U  const  OSTmrCfgNameEn      = OS_TMR_CFG_NAME_EN;
 118          INT16U  const  OSTmrCfgWheelSize   = OS_TMR_CFG_WHEEL_SIZE;
 119          INT16U  const  OSTmrCfgTicksPerSec = OS_TMR_CFG_TICKS_PER_SEC;
 120          
 121          #if (OS_TMR_EN > 0u) && (OS_TMR_CFG_MAX > 0u)
 122          INT16U  const  OSTmrSize           = sizeof(OS_TMR);
 123          INT16U  const  OSTmrTblSize        = sizeof(OSTmrTbl);
 124          INT16U  const  OSTmrWheelSize      = sizeof(OS_TMR_WHEEL);
 125          INT16U  const  OSTmrWheelTblSize   = sizeof(OSTmrWheelTbl);
 126          #else
              INT16U  const  OSTmrSize           = 0u;
              INT16U  const  OSTmrTblSize        = 0u;
              INT16U  const  OSTmrWheelSize      = 0u;
              INT16U  const  OSTmrWheelTblSize   = 0u;
              #endif
 132          
 133          #endif
 134          
 135          /*$PAGE*/
 136          /*
 137          *********************************************************************************************************
 138          *                                             DEBUG DATA
 139          *                            TOTAL DATA SPACE (i.e. RAM) USED BY uC/OS-II
 140          *********************************************************************************************************
 141          */
 142          #if OS_DEBUG_EN > 0u
 143          
 144          INT16U  const  OSDataSize = sizeof(OSCtxSwCtr)
 145          #if (OS_EVENT_EN) && (OS_MAX_EVENTS > 0u)
 146                                    + sizeof(OSEventFreeList)
 147                                    + sizeof(OSEventTbl)
 148          #endif
 149          #if (OS_FLAG_EN > 0u) && (OS_MAX_FLAGS > 0u)
 150                                    + sizeof(OSFlagTbl)
 151                                    + sizeof(OSFlagFreeList)
 152          #endif
 153          #if OS_TASK_STAT_EN > 0u
 154                                    + sizeof(OSCPUUsage)
 155                                    + sizeof(OSIdleCtrMax)
 156                                    + sizeof(OSIdleCtrRun)
 157                                    + sizeof(OSStatRdy)
 158                                    + sizeof(OSTaskStatStk)
 159          #endif
 160          #if OS_TICK_STEP_EN > 0u
 161                                    + sizeof(OSTickStepState)
 162          #endif
 163          #if (OS_MEM_EN > 0u) && (OS_MAX_MEM_PART > 0u)
 164                                    + sizeof(OSMemFreeList)
 165                                    + sizeof(OSMemTbl)
 166          #endif
 167          #if (OS_Q_EN > 0u) && (OS_MAX_QS > 0u)
 168                                    + sizeof(OSQFreeList)
 169                                    + sizeof(OSQTbl)
 170          #endif
 171          #if OS_TIME_GET_SET_EN > 0u   
 172                                    + sizeof(OSTime)
 173          #endif
 174          #if (OS_TMR_EN > 0u) && (OS_TMR_CFG_MAX > 0u)
 175                                    + sizeof(OSTmrFree)
 176                                    + sizeof(OSTmrUsed)
C51 COMPILER V9.51   OS_DBG_R                                                              02/25/2015 14:57:57 PAGE 4   

 177                                    + sizeof(OSTmrTime)
 178                                    + sizeof(OSTmrSem)
 179                                    + sizeof(OSTmrSemSignal)
 180                                    + sizeof(OSTmrTbl)
 181                                    + sizeof(OSTmrFreeList)
 182                                    + sizeof(OSTmrTaskStk)
 183                                    + sizeof(OSTmrWheelTbl)
 184          #endif
 185                                    + sizeof(OSIntNesting)
 186                                    + sizeof(OSLockNesting)
 187                                    + sizeof(OSPrioCur)
 188                                    + sizeof(OSPrioHighRdy)
 189                                    + sizeof(OSRdyGrp)
 190                                    + sizeof(OSRdyTbl)
 191                                    + sizeof(OSRunning)
 192                                    + sizeof(OSTaskCtr)
 193                                    + sizeof(OSIdleCtr)
 194                                    + sizeof(OSTaskIdleStk)
 195                                    + sizeof(OSTCBCur)
 196                                    + sizeof(OSTCBFreeList)
 197                                    + sizeof(OSTCBHighRdy)
 198                                    + sizeof(OSTCBList)
 199                                    + sizeof(OSTCBPrioTbl)
 200                                    + sizeof(OSTCBTbl);
 201          
 202          #endif
 203          
 204          /*$PAGE*/
 205          /*
 206          *********************************************************************************************************
 207          *                                        OS DEBUG INITIALIZATION
 208          *
 209          * Description: This function is used to make sure that debug variables that are unused in the application
 210          *              are not optimized away.  This function might not be necessary for all compilers.  In this
 211          *              case, you should simply DELETE the code in this function while still leaving the declaratio
             -n
 212          *              of the function itself.
 213          *
 214          * Arguments  : none
 215          *
 216          * Returns    : none
 217          *
 218          * Note(s)    : (1) This code doesn't do anything, it simply prevents the compiler from optimizing out
 219          *                  the 'const' variables which are declared in this file.
 220          *              (2) You may decide to 'compile out' the code (by using #if 0/#endif) INSIDE the function 
 221          *                  if your compiler DOES NOT optimize out the 'const' variables above.
 222          *********************************************************************************************************
 223          */
 224          
 225          #if OS_DEBUG_EN > 0u
 226          void  OSDebugInit (void)
 227          {
 228   1          void  const  *ptemp;
 229   1      
 230   1      
 231   1          ptemp = (void const *)&OSDebugEn;
 232   1      
 233   1          ptemp = (void const *)&OSEndiannessTest;
 234   1      
 235   1          ptemp = (void const *)&OSEventMax;
 236   1          ptemp = (void const *)&OSEventNameEn;
 237   1          ptemp = (void const *)&OSEventEn;
C51 COMPILER V9.51   OS_DBG_R                                                              02/25/2015 14:57:57 PAGE 5   

 238   1          ptemp = (void const *)&OSEventSize;
 239   1          ptemp = (void const *)&OSEventTblSize;
 240   1          ptemp = (void const *)&OSEventMultiEn;
 241   1      
 242   1          ptemp = (void const *)&OSFlagEn;
 243   1          ptemp = (void const *)&OSFlagGrpSize;
 244   1          ptemp = (void const *)&OSFlagNodeSize;
 245   1          ptemp = (void const *)&OSFlagWidth;
 246   1          ptemp = (void const *)&OSFlagMax;
 247   1          ptemp = (void const *)&OSFlagNameEn;
 248   1      
 249   1          ptemp = (void const *)&OSLowestPrio;
 250   1      
 251   1          ptemp = (void const *)&OSMboxEn;
 252   1      
 253   1          ptemp = (void const *)&OSMemEn;
 254   1          ptemp = (void const *)&OSMemMax;
 255   1          ptemp = (void const *)&OSMemNameEn;
 256   1          ptemp = (void const *)&OSMemSize;
 257   1          ptemp = (void const *)&OSMemTblSize;
 258   1      
 259   1          ptemp = (void const *)&OSMutexEn;
 260   1      
 261   1          ptemp = (void const *)&OSPtrSize;
 262   1      
 263   1          ptemp = (void const *)&OSQEn;
 264   1          ptemp = (void const *)&OSQMax;
 265   1          ptemp = (void const *)&OSQSize;
 266   1      
 267   1          ptemp = (void const *)&OSRdyTblSize;
 268   1      
 269   1          ptemp = (void const *)&OSSemEn;
 270   1      
 271   1          ptemp = (void const *)&OSStkWidth;
 272   1      
 273   1          ptemp = (void const *)&OSTaskCreateEn;
 274   1          ptemp = (void const *)&OSTaskCreateExtEn;
 275   1          ptemp = (void const *)&OSTaskDelEn;
 276   1          ptemp = (void const *)&OSTaskIdleStkSize;
 277   1          ptemp = (void const *)&OSTaskProfileEn;
 278   1          ptemp = (void const *)&OSTaskMax;
 279   1          ptemp = (void const *)&OSTaskNameEn;
 280   1          ptemp = (void const *)&OSTaskStatEn;
 281   1          ptemp = (void const *)&OSTaskStatStkSize;
 282   1          ptemp = (void const *)&OSTaskStatStkChkEn;
 283   1          ptemp = (void const *)&OSTaskSwHookEn;
 284   1      
 285   1          ptemp = (void const *)&OSTCBPrioTblMax;
 286   1          ptemp = (void const *)&OSTCBSize;
 287   1      
 288   1          ptemp = (void const *)&OSTicksPerSec;
 289   1          ptemp = (void const *)&OSTimeTickHookEn;
 290   1      
 291   1      #if OS_TMR_EN > 0u
 292   1          ptemp = (void const *)&OSTmrTbl[0];
 293   1          ptemp = (void const *)&OSTmrWheelTbl[0];
 294   1          
 295   1          ptemp = (void const *)&OSTmrEn;
 296   1          ptemp = (void const *)&OSTmrCfgMax;
 297   1          ptemp = (void const *)&OSTmrCfgNameEn;
 298   1          ptemp = (void const *)&OSTmrCfgWheelSize;
 299   1          ptemp = (void const *)&OSTmrCfgTicksPerSec;
C51 COMPILER V9.51   OS_DBG_R                                                              02/25/2015 14:57:57 PAGE 6   

 300   1          ptemp = (void const *)&OSTmrSize;
 301   1          ptemp = (void const *)&OSTmrTblSize;
 302   1      
 303   1          ptemp = (void const *)&OSTmrWheelSize;
 304   1          ptemp = (void const *)&OSTmrWheelTblSize;
 305   1      #endif
 306   1      
 307   1          ptemp = (void const *)&OSVersionNbr;
 308   1      
 309   1          ptemp = (void const *)&OSDataSize;
 310   1      
 311   1          ptemp = ptemp;                             /* Prevent compiler warning for 'ptemp' not being used! */
 312   1      }
 313          #endif
 314                                                                                                                                                       
             -                                                                                


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =      1    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     59    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
